{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Numero decimal a binario con representaciÃ³n de 32 bits (IEE754)\n",
    "Juan Esteban Velez 161003641\n",
    "Leonardo Cardona 161003608\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "numingresado = float(input(\"Ingrese un numero decimal: \"));\n",
    "entera = abs(int(numingresado));   \n",
    "decimal = abs(numingresado) - abs(int(numingresado));\n",
    "\n",
    "vector = \"\"\n",
    "vector1 = \"\"\n",
    "vector2 = \"\"\n",
    "vector3 = \"\"\n",
    "vector4 = \"\"\n",
    "print(\"Parte entera del numero ingresado\",entera)\n",
    "print(\"Parte decimal del numero ingresado\",decimal)\n",
    "\n",
    "\"Signo \"\n",
    "\n",
    "if(numingresado<0) :\n",
    "\tsigne = 1;\n",
    "else :\n",
    "\tsigne = 0;\n",
    "\"FIN SIGNO\"\n",
    "    \n",
    "\"PARTE ENTERA\"\n",
    "\n",
    "for i in range (40):\n",
    "   if(entera%2 == 0):\n",
    "          vector = '0' + vector;\n",
    "          entera = entera/2;\n",
    "   if(entera%2 !=0) :\n",
    "      vector = '1' + vector;\n",
    "      entera = int(entera/2);\n",
    "         \n",
    "   if(entera ==0):\n",
    "      break\n",
    "               \n",
    "print(\"Parte entera del numero ingresado\",vector)\n",
    "\"FIN PARTE ENTERA\"        \n",
    "\n",
    "\"PARTE DECIMAL\"\n",
    "for y in range (4) :\n",
    "    if(decimal ==0):\n",
    "        break\n",
    "    if(int(decimal*2) == 0):\n",
    "          vector1 =  vector1 + '0';\n",
    "          decimal = decimal*2;\n",
    "    if(int(decimal*2) != 0):\n",
    "        decimal= abs(decimal) - abs(int(decimal));\n",
    "        vector1 = vector1 + '1';\n",
    "        decimal = decimal*2;\n",
    "    if(decimal == 1):\n",
    "        break\n",
    "\"FIN PARTE DECIMAL\"\n",
    "\n",
    "\"EXPONENTE\"\n",
    "\n",
    "exponente = len(vector);\n",
    "exponente1 = exponente - 1;\n",
    "exponente1= exponente1 + 127; \n",
    "\n",
    "for i in range (40):\n",
    "   if(exponente1%2 == 0):\n",
    "          vector2 = '0' + vector2;\n",
    "          exponente1 = exponente1/2;\n",
    "   if(exponente1%2 !=0) :\n",
    "      vector2 = '1' + vector2;\n",
    "      exponente1 = int(exponente1/2);\n",
    "         \n",
    "   if(exponente1 ==0):\n",
    "      break\n",
    "\"FIN EXPONENTE\"\n",
    "\n",
    "\"MANTIZA\"\n",
    "mantiza1 = len(vector);\n",
    "mantiza2= len(vector1);\n",
    "mantizat = mantiza1 + mantiza2;\n",
    "nummant= 24 - mantizat;\n",
    "vector4 = vector[1:]\n",
    "\n",
    "for i in range (nummant):\n",
    "  \n",
    "    vector3 = '0' + vector3;\n",
    "\n",
    "vector5 = vector4 + vector1 + vector3;\n",
    "\"FIN MANTIZA\"\n",
    "\n",
    "print(\"numero ingresado a bin\",vector,\",\",vector1) \n",
    "print(\"numero en representacion de 32 bits:\",signe,vector2,vector5) \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
